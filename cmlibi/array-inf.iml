
(* Implements using the Invalid exception, instead of Subscript. *)

structure ArrayInf :> ARRAY_INF =
   struct

      type 'a array = 'a Array.array ref * 'a

      fun array x = (ref (Array.array 0 x), x)

      fun sub ((ar, x), i) =
         try
            Array.sub (!ar) i
         with exn as (Invalid _) =>
            if i < 0 then
               raise exn
            else
               x

      fun update ((ar, x), i, y) =
         try
            Array.update (!ar) i y
         with exn as (Invalid _) =>
            if i < 0 then
               raise exn
            else
               let
                  val n = Int.max (i+1) (Array.length (!ar) * 2)
                  val a = Array.array n x
               in
                  Array.blit (!ar) 0 a 0 (Array.length (!ar));
                  ar := a;
                  Array.update a i y
               end

      fun erase (ar, x) =
         ar := Array.array 0 x

      fun isEmpty (ar, _) =
         Array.length (!ar) = 0

   end
